@model AdminViewModel<link rel="stylesheet" href="~/css/MissionPartial.css"><h3 class="mt-3 ms-3">Add Mission</h3><hr><div class="container ms-3" style="height:100vh;overflow-y:scroll;">	<form method="post" asp-controller="Admin" asp-action="AddMissionPageData" id="myForm" enctype="multipart/form-data">		<div class="mt-3 d-grid">			<label>Mission Title</label>			<input type="text" class="w-100 mt-2 form form-control" placeholder="Enter Mission Title" asp-for="title" />			<span asp-validation-for="title" class="text-danger"></span>		</div>		<div class="mt-3 d-grid">			<label>Mission Description</label>			<textarea id="mission-desc" type="text" class="w-100 mt-2 form form-control" rows="5" placeholder="Enter Mission Description" asp-for="description"></textarea>			<div class="text-start mt-2"><span id="char-count"></span></div>			<span asp-validation-for="description" class="text-danger"></span>		</div>		<div class="mt-3 d-grid">			<label>Mission Short-Description</label>			<textarea type="text" class="w-100  mt-2 form form-control" rows="5" placeholder="Enter Mission Short-Description" asp-for="shortDescription"></textarea>			<span asp-validation-for="shortDescription" class="text-danger"></span>		</div>		<div class="mt-3">			<div class="row">				<div class="col-lg-6">					<label class="py-2">Country*</label>					<select id="Country" class="form-select" asp-for="countryId">						<option selected>Select Your Country</option>					</select>					<span asp-validation-for="countryId" class="text-danger"></span>				</div>				<div class="col-lg-6">					<label class="py-2">City</label>					<select id="City" class="form-select" asp-for="cityId">						<option selected>Select Your City</option>					</select>					<span asp-validation-for="cityId" class="text-danger"></span>				</div>			</div>		</div>		<div class="mt-3 d-grid">			<label>Organization Name</label>			<input type="text" class="w-100 mt-2 form form-control" placeholder="Enter Organisation Name" asp-for="organizationName" />			<span asp-validation-for="organizationName" class="text-danger"></span>		</div>		<div class="mt-3 d-grid">			<label>Organization Detail</label>			<textarea type="text" class="w-100  mt-2 form form-control" rows="5" placeholder="Enter Organisation Description" asp-for="organizationDetail"></textarea>			<span asp-validation-for="organizationDetail" class="text-danger"></span>		</div>		<div class="mt-3">			<div class="row">				<div class="col-lg-6">					<label class="py-2">Mission Start Date</label>					<input class="form form-control" type="date" asp-for="startDate" id="startDate" name="startDate" />					<span asp-validation-for="startDate" class="text-danger"></span>					<span id="startDateValidation" class="text-danger"></span>				</div>				<div class="col-lg-6">					<label class="py-2">Mission End Date</label>					<input class="form form-control" type="date" asp-for="endDate" id="endDate" name="endDate" />					 <span asp-validation-for="endDate" class="text-danger"></span>					<span id="endDateValidation" class="text-danger"></span>				</div>			</div>		</div>		<div class="mt-3">			<div class="row">				<div class="col-lg-6">					<label for="inputEmail4" class="form-label">Mission Type</label>					<select class="form-select" asp-for="missionType">						<Option>Select Mission Type</Option>						<option>Goal</option>						<option>Time</option>					</select>				</div>				<span asp-validation-for="missionType" class="text-danger"></span>			</div>		</div>		<div class="mt-3">			<div class="row">				<div class="col-lg-6">					<label for="inputState" class="form-label">Skill Name</label>					<div class="dropdown">						<button class="btn btn-primary bg-transparent text-dark border-dark w-100 float-start" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">							Select Skills						</button>						<ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">							@foreach (var skill in Model.SkillList)
							{								<li>									<a class="dropdown-item">										<div class="form-check">											<input class="form-check-input" type="checkbox" value="@skill.SkillId" id="@skill.SkillId" name="listOfSkill" />											<label class="form-check-label" for="Checkme1">@skill.SkillName</label>										</div>									</a>								</li>							}						</ul>					</div>									</div>				<div class="col-lg-6">					<label class="py-2">Mission Theme</label>					<select class="form-select" asp-for="themeId">						@foreach (var theme in Model.MissionThemeList)
						{							<option value="@theme.MissionThemeId">@theme.Title</option>						}					</select>				</div>			</div>		</div>		<div class="mt-3">			<div class="row">				<div class="col-lg-6">					<label class="py-2">Seats</label>					<input class="form form-control" type="number" placeholder="Enter Total Seats" asp-for="totalSeats" />					<span asp-validation-for="totalSeats" class="text-danger"></span>				</div>				<div class="col-lg-6">					<label class="py-2">Deadline</label>					<input class="form form-control" type="date" asp-for="deadline" />					<span asp-validation-for="deadline" class="text-danger"></span>				</div>			</div>		</div>		<div class="mt-3">			<div class="row">				<div class="col-6">					<label class="py-2">Availibility</label>					<select class="form-select" asp-for="availability">						<Option>Select Availibility</Option>						<option>Weekly</option>						<option>Monthly</option>						<option>Yearly</option>					</select>					<span asp-validation-for="availability" class="text-danger"></span>				</div>			</div>		</div>		<div class="mt-3">			<label>Upload Images</label>			<div class="dropzone w-100 mt-3 mb-3">				<input type="file" id="fileInput" accept="image/*,video/*" style="display:none;" asp-for="images" multiple>				<label for="fileInput" class="file-upload-btn mt-2" style="width:    100%;background-color: white;">					Upload					Files					<p style="text-align: center;">						<img src="~/Assets/drag-and-drop.png" />					</p>				</label>			</div>			<div class="image-preview" style="margin-left: 4rem;">			</div>		</div>		<div class="mt-3">			<label>Upload Documents</label>			<div class="dropzone w-100 mt-3 mb-3">				<input type="file" id="documentInput" accept=".pdf,.doc,.docx" style="display:none;" multiple asp-for="Documents">				<label for="documentInput" class="file-upload-btn mt-2" style="width: 100%;background-color: white;">					Upload Documents					<p style="text-align: center;"><img src="~/Assets/drag-and-drop.png" /></p>				</label>			</div>			<div class="document-preview" style="margin-left: 4rem;"></div>		</div>		<div class="d-flex mt-4 mb-4" style="justify-content:flex-end;">			<a class="btn border border-secondary border-2 rounded-pill px-4 mx-3 HoverClass" id="cancleskill">Cancle</a>			<button type="submit" class="btn border border-secondary border-2 rounded-pill px-4 HoverClass SaveSkills">Save</button>		</div>	</form></div>@*This Scripts files is for validation*@<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script><script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script><script>	getCountry();	//$('#City').attr('disabled', true);	$('#Country').change(function () {		$('#City').empty();		$('#City').append('<option>Select City</option>')		//	$('#City').attr('disabled', false);		var countryId = $('#Country	').val();		$.ajax({			url: '/User/getCityList',			data: {				id: countryId,			},			type: "POST",			success: function (result) {				$.each(result, function (i, data) {					$('#City').append('<option value=' + data.cityId + '>' + data.name + '</option>')				})			}		})	})	function getCountry() {		$.ajax({			url: '/User/getCountryList',			type: 'POST',			success: function (result) {				$.each(result, function (i, data) {					$('#Country').append('<option value=' + data.countryId + '>' + data.name + '</option>');				})			},		})	}	// Below code is for Mission description text-area input Capacity START	const maxLength = 1000;	const charCountEl = document.getElementById('char-count');	const missionDescEl = document.getElementById('mission-desc');	// Set the initial character count	charCountEl.textContent = `Remaining characters: ${maxLength}/${maxLength}`;	// Listen for input events on the textarea	missionDescEl.addEventListener('input', function (event) {		const charCount = event.target.value.length;		if (charCount === 0) {			// If the textarea is empty, show the total character count			charCountEl.textContent = `Total characters: 0/${maxLength}`;		} else {			// Otherwise, show the remaining character count			const remainingChars = maxLength - charCount;			charCountEl.textContent = `Remaining characters: ${remainingChars}/${maxLength}`;		}	});	// Prevent the user from typing more than maxLength characters	missionDescEl.addEventListener('keypress', function (event) {		if (event.target.value.length >= maxLength) {			event.preventDefault();		}	});	// ABOVE code is for Mission description text-area input Capacity END	// Below Js is for Mission Type select and disabledfield when required START	const missionTypeSelect = document.querySelector('select[name="missionType"]');	const seatsInput = document.querySelector('input[name="totalSeats"]');	const deadlineInput = document.querySelector('input[name="deadline"]');	missionTypeSelect.addEventListener('change', () => {		if (missionTypeSelect.value === 'Time') {			seatsInput.disabled = false;			deadlineInput.disabled = false;		} else {			seatsInput.disabled = true;			deadlineInput.disabled = true;		}	});	// ABOVE Js is for Mission Type select and disabledfield when required START	// Below Javascript is for startdate and enddate validation START	const startDateInput = document.getElementById("startDate");	const endDateInput = document.getElementById("endDate");	const startDateValidation = document.getElementById("startDateValidation");	const endDateValidation = document.getElementById("endDateValidation");	// Disable dates before the current date in the startDate and endDate fields	const currentDate = new Date();	const year = currentDate.getFullYear();	const month = String(currentDate.getMonth() + 1).padStart(2, "0");	const day = String(currentDate.getDate()).padStart(2, "0");	const todayString = `${year}-${month}-${day}`;	startDateInput.setAttribute("min", todayString);	endDateInput.setAttribute("min", todayString);	endDateInput.addEventListener("change", () => {		const startDate = new Date(startDateInput.value);		const endDate = new Date(endDateInput.value);		if (endDate <= startDate) {			endDateValidation.textContent = "End date must be after start date.";			endDateInput.setCustomValidity("End date must be after start date.");		} else {			endDateValidation.textContent = "";			endDateInput.setCustomValidity("");		}	});	startDateInput.addEventListener("change", () => {		const startDate = new Date(startDateInput.value);		const endDate = new Date(endDateInput.value);		if (startDate < currentDate) {			startDateValidation.textContent = "Start date must be on or after the current date.";			startDateInput.setCustomValidity("Start date must be on or after the current date.");			startDateInput.valueAsDate = currentDate;		} else {			startDateValidation.textContent = "";			startDateInput.setCustomValidity("");		}		if (endDate <= startDate) {			endDateValidation.textContent = "End date must be after start date.";			endDateInput.setCustomValidity("End date must be after start date.");		} else {			endDateValidation.textContent = "";			endDateInput.setCustomValidity("");		}	});	endDateInput.addEventListener("change", () => {		const startDate = new Date(startDateInput.value);		const endDate = new Date(endDateInput.value);		if (endDate <= startDate) {			endDateValidation.textContent = "End date must be after start date.";			endDateInput.setCustomValidity("End date must be after start date.");		} else {			endDateValidation.textContent = "";			endDateInput.setCustomValidity("");		}		if (endDate < currentDate) {			endDateValidation.textContent = "End date must be on or after the current date.";			endDateInput.setCustomValidity("End date must be on or after the current date.");			endDateInput.valueAsDate = currentDate;		} else {			endDateValidation.textContent = "";			endDateInput.setCustomValidity("");		}	});	// ABOVE Javascript is for startdate and enddate validation START	//Js For Upload images and Dcouments	const dropzone = document.querySelector('.dropzone');	const previewContainer = document.querySelector('.image-preview');	const documentDropzone = document.querySelector('#documentInput').closest('.dropzone');	const documentPreviewContainer = document.querySelector('.document-preview');	dropzone.addEventListener('dragover', (e) => {		e.preventDefault();		dropzone.classList.add('dragover');	});	dropzone.addEventListener('dragleave', () => {		dropzone.classList.remove('dragover');	});	dropzone.addEventListener('drop', (e) => {		e.preventDefault();		dropzone.classList.remove('dragover');		const files = e.dataTransfer.files;		handleFiles(files);	});	document.querySelector('#fileInput').addEventListener('change', (e) => {		handleFiles(e.target.files);	});	function handleFiles(files) {		for (const file of files) {			const reader = new FileReader();			reader.readAsDataURL(file);			reader.onload = () => {				const preview = document.createElement('div');				preview.innerHTML = `												<img src="${reader.result}" alt="${file.name}">													<div class="close" onclick="removeImage(event)"><i class="bi bi-x-circle"></i></div>`;				previewContainer.appendChild(preview);			};		}	}	function removeImage(e) {		e.currentTarget.parentElement.remove();	}	documentDropzone.addEventListener('dragover', (e) => {		e.preventDefault();		documentDropzone.classList.add('dragover');	});	documentDropzone.addEventListener('dragleave', () => {		documentDropzone.classList.remove('dragover');	});	documentDropzone.addEventListener('drop', (e) => {		e.preventDefault();		documentDropzone.classList.remove('dragover');		const files = e.dataTransfer.files;		handleDocumentFiles(files);	});	document.querySelector('#documentInput').addEventListener('change', (e) => {		handleDocumentFiles(e.target.files);	});	function handleDocumentFiles(files) {		for (const file of files) {			const preview = document.createElement('div');			preview.innerHTML = `							<p>${file.name}</p>							<div class="close" onclick="removeDocument(event)">x</div>`;			documentPreviewContainer.appendChild(preview);		};	}	function removeDocument(e) {		e.currentTarget.parentElement.remove();	}</script>